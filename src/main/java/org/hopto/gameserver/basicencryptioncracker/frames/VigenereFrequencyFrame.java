package org.hopto.gameserver.basicencryptioncracker.frames;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.hopto.gameserver.basicencryptioncracker.engine.VigenereFrequencyAnalysisEngine;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

public class VigenereFrequencyFrame {
    private JPanel panel;
    private JButton schliessenButton;
    private JTabbedPane tabbedPane1;

    public VigenereFrequencyFrame(String input, int keyLenght) {
        final JFrame frame = new JFrame();
        schliessenButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent actionEvent) {
                frame.setVisible(false);
            }
        });

        HashMap<Character, Integer>[] hashMaps = VigenereFrequencyAnalysisEngine.getFrequency(input, keyLenght);

        for (HashMap<Character, Integer> map : hashMaps) {
            JPanel tabPanel = new JPanel();
            String[] columns = {"Buchstabe", "Anzahl"};
            Object[][] data = new Object[26][2];

            Iterator it = map.entrySet().iterator();
            int i = 0;
            while (it.hasNext()) {
                Map.Entry<Character, Integer> pair = (Map.Entry) it.next();
                data[i][0] = pair.getKey();
                data[i][1] = pair.getValue();
                i++;
            }
            JTable table = new JTable(data, columns);
            JScrollPane jsp = new JScrollPane(table);
            table.setFillsViewportHeight(true);

            tabPanel.add(jsp);
            this.tabbedPane1.addTab(String.valueOf(this.tabbedPane1.getTabCount() + 1), tabPanel);
        }
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.add(this.panel);
        frame.pack();
        frame.setSize(500, 520);
        frame.setVisible(true);
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        tabbedPane1 = new JTabbedPane();
        panel.add(tabbedPane1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(200, 200), null, 0, false));
        schliessenButton = new JButton();
        schliessenButton.setText("Schliessen");
        panel.add(schliessenButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
